version: '3.1'

services:
  redis:
    image: redis:5-alpine
    restart: always
    ports:
      - 127.0.0.1:6379:6379
    # api is the container name for our Go API
  websocket-server:
      # It will look for a dockerfile in the project root and build it
    build: "."
      # Exposes the port 5000 from a container and binds it to a random port
    ports:
      - "5000"
      # If the container goes down, it will restart
    restart: "always"
      # Connects the API to a common api.network bridge
    networks: 
      - "websocket-server.network"
      # Starts up 5 replicas of the same image
    deploy:
      replicas: 5
  # nginx container
  nginx:
      # specifies the latest nginx image
    image: nginx:latest
      # Connects the conf file of the container to the conf file in our folder
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # It will start up the nginx only when all api containers have started
    depends_on: 
      - websocket-server
      # Connects the port 80 of the nginx container to localhost:80 or localhost
    ports: 
      - "80:80"
    networks: 
      - "websocket-server.network"
networks: 
  websocket-server.network: